{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ishika singh\\\\health_monitor\\\\frontend\\\\frontend\\\\src\\\\components\\\\DoctorDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllPatients, getTemperatureData } from '../services/apiService';\nimport './DoctorDashboard.css';\nimport DocHeader from './DocHeader';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [temperatureData, setTemperatureData] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const patientsData = await getAllPatients();\n        setPatients(patientsData);\n\n        // Fetch temperature data for the first patient initially\n        if (patientsData.length > 0) {\n          const temperature = await getTemperatureData(patientsData[0].patient_id);\n          setTemperatureData(temperature);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchPatients();\n  }, []);\n  const handlePatientSelect = async patientId => {\n    try {\n      const temperature = await getTemperatureData(patientId);\n      setTemperatureData(temperature);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DocHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patients-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Patient List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handlePatientSelect(patient.patient_id),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name: \", patient.displayName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", patient.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, patient.patient_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temperature-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Temperature Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), temperatureData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: temperatureData.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Patient ID: \", data.patient_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pulse Rate: \", data.temperature]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Timestamp: \", data.timestamp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No temperature data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorDashboard, \"XmYUAWdpgCjrO7ORNjiD7EmXfmw=\");\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","getAllPatients","getTemperatureData","DocHeader","Footer","jsxDEV","_jsxDEV","DoctorDashboard","_s","patients","setPatients","temperatureData","setTemperatureData","error","setError","fetchPatients","patientsData","length","temperature","patient_id","message","handlePatientSelect","patientId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","patient","onClick","displayName","email","data","index","timestamp","_c","$RefreshReg$"],"sources":["C:/Users/ishika singh/health_monitor/frontend/frontend/src/components/DoctorDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAllPatients, getTemperatureData } from '../services/apiService';\r\nimport './DoctorDashboard.css';\r\nimport DocHeader from './DocHeader';\r\nimport Footer from './Footer';\r\n\r\nconst DoctorDashboard = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [temperatureData, setTemperatureData] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchPatients = async () => {\r\n      try {\r\n        const patientsData = await getAllPatients();\r\n        setPatients(patientsData);\r\n\r\n        // Fetch temperature data for the first patient initially\r\n        if (patientsData.length > 0) {\r\n          const temperature = await getTemperatureData(patientsData[0].patient_id);\r\n          setTemperatureData(temperature);\r\n        }\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const handlePatientSelect = async (patientId) => {\r\n    try {\r\n      const temperature = await getTemperatureData(patientId);\r\n      setTemperatureData(temperature);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n   <DocHeader />\r\n      <h2>Doctor Dashboard</h2>\r\n\r\n      <div className=\"patients-list\">\r\n        <h3>Patient List</h3>\r\n        {error && <p>{error}</p>}\r\n        <ul>\r\n          {patients.map((patient) => (\r\n            <li key={patient.patient_id} onClick={() => handlePatientSelect(patient.patient_id)}>\r\n              <p>Name: {patient.displayName}</p>\r\n              <p>Email: {patient.email}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"temperature-data\">\r\n        <h3>Temperature Data</h3>\r\n        {temperatureData.length > 0 ? (\r\n          <ul>\r\n            {temperatureData.map((data, index) => (\r\n              <li key={index}>\r\n                <p>Patient ID: {data.patient_id}</p>\r\n                <p>Pulse Rate: {data.temperature}</p>\r\n                <p>Timestamp: {data.timestamp}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No temperature data available</p>\r\n        )}\r\n      </div>\r\n\r\n       <Footer /> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}